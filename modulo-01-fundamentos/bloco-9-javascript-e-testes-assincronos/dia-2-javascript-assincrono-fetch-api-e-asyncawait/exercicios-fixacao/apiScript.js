// apiScript.js

// 1 Agora vamos tentar fazer as requisiÃ§Ãµes a API usando fetch . Essa funÃ§Ã£o recebe dois parÃ¢metros:
// O endereÃ§o para o qual a requisiÃ§Ã£o serÃ¡ feita, ou seja, a url do serviÃ§o.
// Um objeto contendo as especificaÃ§Ãµes da requisiÃ§Ã£o. Para essa API , atribuiremos a esse objeto as chaves method e headers

//1.2 O segundo parÃ¢metro myObject define o tipo de request: method: 'GET' e o formato da resposta headers: { 'Accept': 'application/json' } , como visto nas requisiÃ§Ãµes via curl .
// A funÃ§Ã£o fetch Ã© uma Promise (vocÃª nÃ£o precisa entender o que Ã© uma Promise agora, considere apenas como sendo algo assÃ­ncrono) e, como tal, dependendo de seus desdobramentos, podemos encadear procedimentos a serem feitos, utilizando as clÃ¡usulas .then (em caso de sucesso) e .catch (em caso de falha). A requisiÃ§Ã£o fetch retorna um objeto Response . Utilizando .then , verifique a estrutura da resposta usando um console.log na response retornada pelo fetch .

//1.3. Viu a response? AtÃ© recebemos uma resposta do serviÃ§o, mas como Ã© que eu consigo retirar o texto da piada daÃ­ ðŸ¤”?
// Para isso, usamos o mÃ©todo .json() na resposta da API . Esse mÃ©todo converte o conteÃºdo do body da Response e retorna uma outra Promise , que, quando bem-sucedida, retorna um JSON contendo as informaÃ§Ãµes da piada.
// A partir do fetch , troque o console.log() anterior pelo mÃ©todo .json() e imprima os dados da requisiÃ§Ã£o.

//1.4 Recebemos um objeto, certo? A partir daÃ­, faÃ§a a piada aparecer no DOM da sua pÃ¡gina!
/*
const API_URL = 'https://icanhazdadjoke.com/';

const fetchJoke = () => {
  //1 Adicionar lÃ³gica aqui!
   const myObject = {
    method: 'GET',
    headers: { 'Accept': 'application/json' }
  };

  fetch(API_URL, myObject)
  //1.2 
    .then(response => console.log(response))
  //1.3
    .then(data => console.log(data));
};

window.onload = () => fetchJoke();
*/

//1.4 CÃ³digo final:
const API_URL = 'https://icanhazdadjoke.com/';

const fetchJoke = () => {
  fetch(API_URL, { headers: { Accept: 'application/json' } })
    .then(response => response.json())
    .then(data =>
      document.getElementById('jokeContainer').innerText = data.joke
    );
}

window.onload = () => fetchJoke();
