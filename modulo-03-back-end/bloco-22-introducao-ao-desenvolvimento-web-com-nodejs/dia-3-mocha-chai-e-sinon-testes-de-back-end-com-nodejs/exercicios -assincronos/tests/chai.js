// O chai nos ajudar√° com as asser√ß√µes, ou seja, ele nos fornece maneiras de dizermos o que queremos testar e ent√£o ele validar√° se o resultado condiz com o esperado.
// At√© aqui n√£o estamos testando nada de fato, apenas descrevemos o teste. Para de fato testar nossa fun√ß√£o precisamos cham√°-la passando o input desejado e ent√£o validar se a resposta √© aquela que esperamos.
// Sem as ferramentas de testes, observe que fizemos essa verifica√ß√£o utilizando alguns ifs, o que √© bem trabalhoso:

const respostaCenario1 = calculaSituacao(4);
if (respostaCenario1 === 'reprovado') {
  console.log(`Ok üöÄ`);
} else {
  console.error('Resposta n√£o esperada üö®');
}

// Essa valida√ß√£o √© o que chamamos de assertion, "asser√ß√£o" ou, em alguns casos, "afirma√ß√£o". Para nos ajudar com essa tarefa temos o chai, que nos fornece diversos tipos de valida√ß√µes diferentes.
// Usaremos a interface expect do chai em nossos exemplos, que significa de fato o que √© esperado para determinada vari√°vel:

const resposta = calculaSituacao(4);

expect(resposta).equals('reprovado');

// No c√≥digo acima, estamos chamando nossa fun√ß√£o e, logo em seguida, afirmamos que seu retorno, armazenado na constante resposta, deve ser igual (equals) a 4.
// Muito mais leg√≠vel e simples!